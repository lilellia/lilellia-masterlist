#!/usr/bin/env python3

import json
import logging
from pathlib import Path
import shutil
import subprocess
import sys

HERE=Path(__file__).resolve().parent

logger = logging.getLogger("masterlist-build")
logging.basicConfig(level=logging.DEBUG)

YAML_DATA = HERE / "script-data.yaml"
JSON_DATA = HERE / "script-data.json"
JSON_DATA_BAK = HERE / "script-data.json.bak"

def main():
    # try to update script-data.json
    if YAML_DATA.exists():
        shutil.copyfile(JSON_DATA, JSON_DATA_BAK)
        logger.info(f"backup written: {JSON_DATA} > {JSON_DATA_BAK}")
        command = ["yq", ". | del(.scripts[].credited, .scripts[].informed, .scripts[].notes)", "-o", "json"]
        try:
            proc = subprocess.run(command, capture_output=True)
            with open(JSON_DATA, "w", encoding="utf-8") as f:
                f.write(json.dumps(proc.stdout.decode(), indent=4))
        except Exception as e:
            logger.error(f"Could not create json file: {e}")
            sys.exit(str(e))
        else:
            logger.info("json data written: {JSON_DATA}")
    else:
        logger.warning(f"Could not update json file ({YAML_DATA} not found)")
    
    # build html
    command = [sys.executable, HERE / "meta" / "builder.py"]
    try:
        subprocess.run(command)
    except Exception as e:
        logger.error(f"Could not build index.html: {e}")
        sys.exit(str(e))
    else:
        logger.info("built: index.html")
    
    # reformat index.html
        command = ["prettier", "index.html", "--write"]
    try:
        subprocess.run(command, capture_output=True)
    except Exception as e:
        logger.error(f"Could not reformat index.html: {e}")
        sys.exit(str(e))
    else:
        logger.info("formatted: index.html")

    logger.info("Build succeeded âœ“")


if __name__ == "__main__":
    main()
